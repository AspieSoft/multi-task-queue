/*! Compressed with: @aspiesoft/miniforge-js v1.0.0 | (c) aspiesoftweb@gmail.com */
!function(){!function(e){let r;for(let t=0;t<e.length;t++)try{r=require(e[t]);break}catch(e){}}(["fs-extra","fs"]);const e=function(e,r){try{return require(e)}catch(r){console.error(__dirname,"requires the",e,"module to be installed so it can","decompress","itself")}}("zlib");if(!e)return void(module.exports=void 0);let r="eJylVkuP2zYQ/iuWDgaJZbTyLtCDHK6bAD300AJFcjN8kKWxzUSmXIpKYsj6750hRUmb3W0PvUh8zTfvj4wOrS6sqjXjXVHrxi5AzpasuXYGbGv0wsDfrTLA4sJcL7aOeV/ktjgx4J06sLjVJRyUhjKOpL1eoD4syrpoz6At7yog3DBPCgO5hd8qoBmLm8Koi435GpLGFDI+WXtpsvv7otTJl6aESn0ziQZ7fzzdf2guCj7VB3tvcl3W53e6Pe/BvPvS/LpKHpOHew+WnBXJxoKNSvd1eb3dxukR7GBA8/H6OT/+mZ/RNzoU822640l+uYAumbOJ9z4Ifc/4mpyxMl2HMC0oUEOQYMPs3R1PbP3JGqWPjN9B4i39eLXQsNUvs834BD9inr0Q+SO3p0GKzTf6UaViIFdpSJmVXS+U3O5ETSNDn4o+LX4mO3MGwsqV0DJa8U5vvtWqXKRSynYLuw19pM3od4f/cbOizcpvVn5zsuPgIAlOJUoXVVuij8BvN2Y3Kml1c1IHiwuZSi5tQ8UiaoJCU43/z5wqCExo3jVgfz+foVRYJYzlzVUXi1lR6tstWkVS6uUSkgr00Z6e0k3+PVdYZcxiQMOYMS6fup5zYRnn+J+UNUPhkjnLJX0HqOWSRWaaoi67pW0sil2yr+riK+aC+5rW0gl6L/nabvUuObeVVZ+xA7AUaI61Xl7v7sQ0eZKvHrwYVRtlrxunPcRO88zNXfg09zDBjNuN3OCZ//5fmH6KTjlEh2T4oTbMe5uu9ftZbNYaC9cFQklaRsw1CumndLm0WzUL1x4d/0p7VFFuq7GYXD4NsS6pPlciSrkomNso9oLN8k777/wBPyQ3FGaPzWAeMM1uOTnnus0rZJWqgQWqfniuupsJPbpqTJpLpQpgWiAy0g5YWNChNXaZVbqFHlG8xle863sqW23BfMsrNrc7xA8wfvBeheABBs9sFSpGwGEwFl3DaI5m+D/6BHztu/06ETQIJbpgRmZEyH1WCe991vZyOhCl04loFY74Tu95h+xXV5DrWAYGz83RsWWzfdhtmJHzOTJMFE0LjzuexcGw1xEwUbqtKkyDIjC0ACFSFKv3X6Cwk5DafDAmvyaqcX+muDsfKexBp1ZtVzusA0Iiy1qEQYeGKappiZKwIZzQmCcvOjbIADDUyRxkWJqAXkbGeaAQUXk1KYFj2ahnMeJipFGDaHRutkQKnNSQ2EJitaxdjRU72ZGmDESxz5RwZZql4j9yLZ7HDXu6I6yJamQgTOHWHR3RVTZUKF1r9n04s6Z7CTtta3fUEQc/qrioNkh7OJ7opeBZWHIMgzemazvX0k50lPtZaJJYD5foNSkw2GZW5o6LXvj2nJfgGSkN7UtG6d0udLPx09FftVB6YflP0K65Kfp8aHQaz643hMAbbtzBTLql5XLGGX1gHZjbMjdkskK/YYWeWaFfWOFM0JMJc/3a6/835hmNcrwz2eWmo2ngTRuB0WoVaDIVARBvDnGl8ZyZhmfBgbk2A6z1LS7ilW8FEVsE4Vk4lZ9PpJonEvC5gU8TRWm73VJ8gYRhqBbHyi/rPuCNqcaxmopEIbb22IDpGrDDMGDr4d23cOfCIfqjw2/yPXYR8vUKHrl47Vl8rsu2go3/JfDjUhvbSJW9dva7wkfg943/DW2cN1//aqGFN0SOVb133OUHL4Q4vWH/Afe1Hmw=",t=__filename;if(r=function(r){if(r)try{compressed=Buffer.from(r,"base64");let t=e.inflateSync(compressed);return t=t.toString(),t&&""!==t.trim()?t:null}catch(e){return null}}(r),!r)return void console.error(t,"failed to decompress");
/*! Runs with: require-from-string v2.0.2 | (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop) */const o=function(){const e=require("module"),r=require("path");return function(t,o,n){if("object"==typeof o&&(n=o,o=void 0),o=o||"",(n=n||{}).appendPaths=n.appendPaths||[],n.prependPaths=n.prependPaths||[],"string"!=typeof t)throw new Error("code must be a string, not "+typeof t);var a=e._nodeModulePaths(r.dirname(o)),s=module.parent,i=new e(o,s);i.filename=o,i.paths=[].concat(n.prependPaths).concat(a).concat(n.appendPaths),i._compile(t,o);var u=i.exports;return s&&s.children&&s.children.splice(s.children.indexOf(i),1),u}}();module.exports=o(r,t)}();
