/*! Compressed with: @aspiesoft/miniforge-js v1.0.0 | (c) aspiesoftweb@gmail.com */
!function(){!function(e){let t;for(let r=0;r<e.length;r++)try{t=require(e[r]);break}catch(e){}}(["fs-extra","fs"]);const e=function(e,t){try{return require(e)}catch(t){console.error(__dirname,"requires the",e,"module to be installed so it can","decompress","itself")}}("zlib");if(!e)return void(module.exports=void 0);let t="eJylVkuP2zYQ/iuWDgaJ5WrlXSAHKYqbAD300AJFcjN8kKWxPRuZdCUqiWHrv3eG1Guzm156ER/D+TiPb4YK9q0uLBot5LUwurELyGZbtr5ca7BtrRc1/NNiDSIs6svZmlB2RW6LowB5xb0IW13CHjWUYZDZyxnMflGaoj2BtvJaAeMO66ioIbfwewW8EmFT1Hi2oUwhauoiC4/Wnpvk4aEodfTclFDhtzrSYB8Ox4ePzRnhs9nbhzrXpTnd6/a0g/r+ufltFT1Fjw8eLDoh64ZKjJfuTHm53cblAWxvQPPp8iU//JWfyDc+FMpNvJVRfj6DLoWzSXY+CF0nZMrO2CxOhzAtOFB9kGAt7N2djKz5bGvUByHvIPKWfrpYaMTq3UwYHuFHKJNXKn/m9thribmgG69EAdkqHlJms2unMNtsVc0zw5+KPy19Jjv3ApTNVkpnwUpe9fqbwXIRZ1nWbmC75k9mEx7uaByFFQsrL6y8cLKjcJAMhxHqompL8hHk7SbsGqNWN0fcW9pIMDq3DZNF1QxFpho/zpxqGExeG7B/nE5QInFEiLy56GIxo2T+PUdik5DKUkTkTP/Sc5FvWC75G1WgD/a4XIrATMvbLbAbFlOet9GuMsVXCq/0NNWZU/SGy9Ru9DY6tZXFL0Rqyi6vib7l5e5OTYsP2ZsHzzWaGu1l7W4fwqFl4tYuIlp6mMGM243dkIn//l+YbopO3keHdeTe1MJ7G6f6/Sw2qSYuukBgxtuEmZKS/hAvl3aDs3DtyPGvLGOSOFFjKWNymhLVmHIrFcRSNcIJip0Ss2Sy/N4f8FN2Ayl7YgbzyGlOoWpgQdc9vrzuOjv45EgVNecKCxBaERp1D7Cw4EMpFYtF3UJHKP6WNzzqOuaftlB/yyvxwtY+ZkAxg/c4BAwoYGaDdDEB9pORaBfBa6lyP3ZSgUx90ZZTnwWF6jqYkRg15DupumzaD+JJEKw6eaVuZSrIdZgNHTevD667NZvH7VqYbL6mjhAE08bTVibhYMHbCJQF3VYVxRsZLFgxRExqZvcMhZ2UcP2xrvNLhI0bBUp3PkAqMHctblZ0nd8b4+0lI7kJ95U/7l6kg+i1Y9ahrOILz4aIthmlKXXJbbfZlTESUMUuQfVmcJVjTRJ36qX5VDdXhpjKOYM+o8rtu5LnF6BnBL8G9v1wJuV2Tmze2C0zsPCzSqpqTa2F5lMJtzIZtlwVt7JzNHdl41RHvZ+VJo20f3vKqKDo1TNauXp/5dvL2ocXhd+XCxult9uheoxfjv7iAvXCyp+gXTFx0GVfWDyfvQoEQQ/DKCFaua3lclaj3VDlMLdlbshkhf6FFXpmhX5lhTNBTybM79f+/v+q9NEoV+eTXW45mgbetBGYrMahLcVqAKTurEqezztB/5ruRcB9FagGN7RJL6VV3EgCGP6mJvr5ROI8kUCvNL3oyGm73WJ6uIfpwBbXBV/zfsAbU01znEiChK09NlC6euxhOmDr/ndp4c4Nh3gkh3/ZX6mKqD+u4Emqt/4mT6ZsK1j7IYIfZ1PbJsPkrbPfkf6dvq/90Jdx3nz9u4UWfqFyqMwuryjcfvJKSfKv378fqeP2",r=__filename;if(t=function(t){if(t)try{compressed=Buffer.from(t,"base64");let r=e.inflateSync(compressed);return r=r.toString(),r&&""!==r.trim()?r:null}catch(e){return null}}(t),!t)return void console.error(r,"failed to decompress");
/*! Runs with: require-from-string v2.0.2 | (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop) */const n=function(){const e=require("module"),t=require("path");return function(r,n,o){if("object"==typeof n&&(o=n,n=void 0),n=n||"",(o=o||{}).appendPaths=o.appendPaths||[],o.prependPaths=o.prependPaths||[],"string"!=typeof r)throw new Error("code must be a string, not "+typeof r);var u=e._nodeModulePaths(t.dirname(n)),l=module.parent,c=new e(n,l);c.filename=n,c.paths=[].concat(o.prependPaths).concat(u).concat(o.appendPaths),c._compile(r,n);var a=c.exports;return l&&l.children&&l.children.splice(l.children.indexOf(c),1),a}}();module.exports=n(t,r)}();
